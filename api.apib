FORMAT: 1A

# Daub

API to manage universal knowledge base.

## URI Format

Resource URIs will generally follow a format similar to those shown below.

- Specific Resource - `/{resource-name}/{id}`
    Example - `/things/1`
- Resource Collection - `/{resource-name}`
    Example - `/things`

## Content type

Content type is set to `application/json` for all API calls.

## Response Codes

### HTTP Codes

- `200` - OK status with JSON body
- `201` - OK status with Location header
- `204` - OK status without body
- `404` - Not Found
- `422` - Unprocessable Entity
- `500` - Internal Server Error
- `501` - Not Implemented



# Group Things

## Thing Resource [/things/{id}]

+ Parameters
    - id (name, required)
      - Sample: 2

+ Attributes (Thing)

### Read [GET]

+ Response 200 (application/json)

    + Attributes (Thing)

### Update [PUT]

+ Request (application/json)

    + Attributes (Thing Props)

+ Response 204

### Delete [DELETE]

+ Response 204



# Data Structures

## Document (object)

- id (string, required)

    Unique resource identifier

    - Sample: `59b179370543b947a59117c7`

- createdAt (string, required)

    - Sample: `2018-12-07T11:46:46.066Z`

- updatedAt (string, required)

    - Sample: `2018-12-07T11:46:46.066Z`


## Thing Props (object)

- name (string, required)

    - Sample: `Exo`

- url (string)

    - Sample: `http://freenet.am/`

## Thing (Document)

- Include Thing Props
